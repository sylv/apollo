const fetch = require("node-fetch");
const path = require("path");
const prettier = require("prettier");
const util = require("util");
const fs = require("fs");

const url = "https://raw.githubusercontent.com/filebot/data/master/media-sources.txt";
const writePath = path.join(__dirname, "../src/data/sources.ts");
const startRegex = "(?<!^)(?:\\.|\\[| |^)";
const endRegex = "(?=\\.|\\]| |$)";
const delimiter = "\t";
const date = new Date().toDateString();
const footer = "\n];";
const header = `
// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT EDIT.
// Data from https://raw.githubusercontent.com/filebot/data/master/media-sources.txt
// Generated by scripts/import-sources.js
// Last updated ${date}
export const SOURCES = [`.trim();

async function main() {
  const response = await fetch(url);
  if (!response.ok) throw new Error(`Bad response ${response.status}`);
  const body = await response.text();
  let file = header;
  for (const line of body.trim().split("\n")) {
    const [name, regex] = line.split(delimiter);
    // im not entirely sure if insensitive matching is a good thing here,
    // but otherwise we don't match things like "BDrip"
    file += `{
        name: ${util.inspect(name)},
        regex: ${util.inspect(new RegExp(`${startRegex}(${regex})${endRegex}`, "gi"))}
    },`;
  }

  const content = (file += footer);
  const config = await prettier.resolveConfig(writePath);
  const pretty = prettier.format(content, Object.assign(config, { parser: "babel" }));
  fs.writeFileSync(writePath, pretty);
}

main();
